{"version":3,"sources":["util/util.tsx","util/user.js","util/http.js","pages/result.tsx","components/ModalPicker/ModalPicker.js","pages/main.js","util/history.js","pages/parts/main.js","pages/parts/result.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["isNumber","obj","isNaN","User","openid","getOpenid","this","login","getUserInfo","code","getQueryVariable","local","window","location","href","redirect_uri","encodeURIComponent","redirectUrl","getLocationParam","httpGet","name","reg","RegExp","r","search","match","decodeURIComponent","Promise","resolve","reject","a","res","variable","vars","substring","split","i","length","pair","url","params","addCommonParam","handleResponse","fetch","param","encode","paramAry","push","join","urlEncode","mode","httpPost","formData","method","body","fetchPromise","then","json","Response","data","msg","append","Result","state","see","clickCounter","timer","props","isSaler","alert","floor","setTimeout","clearTimeout","setState","cost","offer","onClose","className","onClick","handleIconClick","bind","PriceLabel","price","handleSeeClick","style","alignItems","size","type","e","React","Component","ModalPicker","title","visible","dataSource","value","onOk","transparent","maxHeight","map","key","label","checked","onChange","color","datas","require","Main","loading","codeDisabled","codeBtnText","hasSendMsg","priecs","showResult","validPhone","categoryVisible","cityVisible","typeData","each","cityData","city","auth_mobile","err","fail","form","validateFields","values","mouth_sales_volume","area","year","sales","typeC","cityC","basePrice","floorPrice","costPrice","offerPrice","costC","offerC","toFixed","calcPrice","year_limit","category","min_reserve_price","reserve_price","offer_price","FormData","Object","keys","console","log","errors","field","getFieldError","mobile","getFieldValue","restTime","codeSendInterval","setInterval","clearInterval","success","error","val","num","Number","getFieldProps","setFieldsValue","aria-hidden","renderHeader","editable","placeholder","validateTrigger","normalize","numberNormalize","rules","required","min","max","message","extra","cols","disabled","Item","arrow","maxLength","getCode","submit","closeResult","toast","text","animating","createForm","createHashHistory","PartsMain","citys","devices","parts","standards","fetchCityData","array2pickerData","fetchDevicesData","fetchPartsData","device","fetchStandardsData","part","handleCityChange","handledeviceChange","handlePartsChange","ary","JSON","stringify","History","pathname","initialValue","result","list","modalVisiable","id","activeItemKey","yiyi","yiyiModal","comment","contact","closeModal","resetFields","requery","standard","ResultListHeader","ResultListRight","device_name","part_name","footer","onPress","autoHeight","flex","textAlign","display","width","unit","App","history","exact","path","component","PartsResult","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1cb062cd.chunk.js","sourcesContent":["/**\n * 计算低价、成本、报价\n * \n * @param area 面积\n * @param year 年限\n * @param sales 月销售额\n * @param typeC 品类系数\n * @param cityC 城市系数\n */\nexport function calcPrice(area: number, year: number, sales: number, typeC: number, cityC: number) {\n    let basePrice = 0 // 标准报价\n    let floorPrice = 0 // 成交底价==成交底价（标准报价）*品类系数*城市系数\n    let costPrice = 0 // 成交价=成交底价*成交价系数\n    let offerPrice = 0 // 报价=成交价*报价系数\n    let costC = 1 // 成交价系数\n    let offerC = 1 // 报价系数\n\n    if (area < 50) {\n        return false\n    }\n    if (area < 100) {\n        basePrice = (area / 60 * 200 + 150) * (year / 3 * 0.15 + 0.85) * (sales / area / 1700 * 0.1 + 0.9)\n        costC = 1.18\n        offerC = 1.25\n    } else if (area < 200) {\n        basePrice = (area / 170 * 300 + 300) * (year / 3 * 0.15 + 0.85) * (sales / area / 1400 * 0.1 + 0.9)\n        costC = 1.15\n        offerC = 1.2\n    } else if (area < 400) {\n        basePrice = (area / 290 * 450 + 350) * (year / 3 * 0.15 + 0.85) * (sales / area / 1300 * 0.1 + 0.9)\n        costC = 1.15\n        offerC = 1.2\n    } else if (area < 800) {\n        basePrice = (area / 550 * 800 + 350) * (year / 3 * 0.15 + 0.85) * (sales / area / 1100 * 0.1 + 0.9)\n        costC = 1.12\n        offerC = 1.15\n    } else if (area < 1400) {\n        basePrice = (area / 1100 * 1300 + 500) * (year / 3 * 0.15 + 0.85) * (sales / area / 1000 * 0.1 + 0.9)\n        costC = 1.1\n        offerC = 1.12\n    } else if (area < 2300) {\n        basePrice = (area / 1800 * 1500 + 1000) * (year / 3 * 0.15 + 0.85) * (sales / area / 900 * 0.1 + 0.9)\n        costC = 1.1\n        offerC = 1.12\n    } else if (area <= 3500) {\n        basePrice = (area / 2800 * 2300 + 1300) * (year / 4 * 0.15 + 0.85) * (sales / area / 900 * 0.1 + 0.9)\n        costC = 1.1\n        offerC = 1.12\n    }\n    if (area >= 400 && cityC === 1.1) {\n        cityC = 1.05\n    }\n    if (area >= 400 && cityC === 1.35) {\n        cityC = 1.3\n    }\n    floorPrice = basePrice * typeC * cityC\n    costPrice = floorPrice * costC\n    offerPrice = costPrice * offerC\n    // console.log(area, year, sales, typeC, cityC)\n    // console.log('calc result: ', basePrice, floorPrice, costPrice, offerPrice)\n    return {\n        floor: floorPrice.toFixed(0),\n        cost: costPrice.toFixed(0),\n        offer: offerPrice.toFixed(0)\n    }\n}\n\n/** \n * param 将要转为URL参数字符串的对象 \n * encode true/false 是否进行URL编码,默认为true \n *  \n * return URL参数字符串 \n */\nexport function urlEncode(param: any, encode = true) {\n    if (param == null) return '';\n    const paramAry = [];\n    for (const i in param) {\n        paramAry.push(i + '=' + (encode ? encodeURIComponent(param[i]) : param[i]))\n    }\n    return paramAry.join('&');\n}\n\nexport function isNumber(obj: any) {\n    return typeof obj === 'number' && !isNaN(obj)\n}\n","import { httpGet } from \"./http\"\n\nconst User = {\n    openid: '',\n    getOpenid() {\n        if (process.env.NODE_ENV === 'development') {\n            return 'oPKdSwC58K57Mskin6hDQUJdSLqs'\n        }\n        // return localStorage.getItem('openid')\n        return this.openid\n    },\n    async login() { // 静默授权\n        if (!!this.getOpenid()) {\n            return this.getUserInfo(this.getOpenid())\n        }\n        const code = this.getQueryVariable('code') // 截取路径中的code，如果没有就去微信授权，如果已经获取到了就直接传code给后台获取openId\n        const local = window.location.href\n        if (!!!code) {\n            const appId = 'wx364a8470a58b03ed'\n            const redirect_uri = encodeURIComponent(local)\n            window.location.href = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appId}&redirect_uri=${redirect_uri}&response_type=code&scope=snsapi_base&state=#wechat_redirect`\n        } else {\n            const redirectUrl = this.getLocationParam('url')\n            const code = this.getLocationParam('code')\n            if (redirectUrl) {\n                window.location = redirectUrl + '?code=' + code\n                return\n            }\n            try {\n                const { openid } = await httpGet('/getopenid', { code: code })\n                this.openid = openid\n                return this.getUserInfo(openid)\n            } catch (error) {\n                window.location = '/'\n            }\n        }\n    },\n    getLocationParam(name) {\n        const reg = new RegExp('(^|&|/?)' + name + '=([^&]*)(&|$)')\n        const r = window.location.search.match(reg);\n        if (r !== null) return decodeURIComponent(r[2])\n        return null;\n    },\n    async getUserInfo(openid) { // 通过code获取 openId等用户信息\n        return new Promise(async (resolve, reject) => {\n            try {\n                const res = await httpGet('/userinfo', { openid: openid })\n                return resolve(res)\n            }\n            catch (error) {\n                return reject(error)\n            }\n        })\n    },\n    // 获取当前url参数\n    getQueryVariable(variable) {\n        var query = window.location.search.substring(1);\n        var vars = query.split(\"&\");\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split(\"=\");\n            if (pair[0] === variable) { return pair[1]; }\n        }\n        return (false);\n    }\n}\nexport default User","import { urlEncode } from \"./util\"\nimport User from \"./user\"\n\n// const BASE_URL = 'https://www.fastmock.site/mock/0834d4826d5be6de92173193ca42e1b9'\n// let BASE_URL = 'http://zwb-baojia.zhaodaka.vip/api/wechat'\nlet BASE_URL = '/api/webchat'\n// if (process.env.NODE_ENV === 'development') {\n//     BASE_URL = '/api/webchat'\n// }\n\nexport function httpGet(url, params) {\n    params = addCommonParam(params)\n    return handleResponse(fetch(BASE_URL + url + '?' + urlEncode(params), {\n        mode: 'cors',\n    }))\n}\nexport function httpPost(url, formData) {\n    formData = addCommonParam(formData)\n    return handleResponse(fetch(BASE_URL + url, {\n        method: 'POST',\n        mode: 'cors',\n        body: formData\n    }))\n}\nfunction handleResponse(fetchPromise) {\n    return new Promise((resolve, reject) => {\n        fetchPromise.then(res => res.json()).then(Response => {\n            if (Response.code === 200) {\n                return resolve(Response.data)\n            } else {\n                return reject(Response.msg)\n            }\n        })\n    })\n}\n\nfunction addCommonParam(params) {\n    const openid = User.getOpenid()\n    if (!!openid) {\n        if (params.append) {\n            params.append('openid', openid)\n        } else {\n            params.openid = openid\n        }\n    }\n    return params\n}","import React from 'react'\nimport './result.less'\nimport { Button, WingBlank, Modal, WhiteSpace } from 'antd-mobile'\ntype PageProps = {\n    floor: number,\n    cost: number,\n    offer: number,\n    onClose: Function,\n    isSaler: Boolean\n}\nexport default class Result extends React.Component<PageProps, {}> {\n    state = {\n        see: false\n    }\n    clickCounter = 0\n    timer: any\n    handleIconClick() {\n        if (!this.props.isSaler) return\n\n        this.clickCounter++\n        if (this.clickCounter >= 3) {\n            Modal.alert('成交底价', this.props.floor + '元/月')\n            return\n        }\n        this.timer = setTimeout(() => {\n            clearTimeout(this.timer)\n            this.clickCounter = 0\n        }, 500)\n    }\n    handleSeeClick() {\n        this.setState({ see: !this.state.see })\n    }\n    render() {\n        const { cost, offer, onClose, isSaler } = this.props\n        const { see } = this.state\n        return (\n            <div className='resultPage'>\n                <div className='result iconfont icon-dui' onClick={this.handleIconClick.bind(this)}></div>\n                <div className='item'>您好，根据您的经营情况，报价如下</div>\n                {/* 报价 */}\n                <div className='item'><PriceLabel price={offer} /></div>\n                {isSaler &&\n                    <>\n                        <i className={`see iconfont ${see ? 'icon-ziyuan' : 'icon-ziyuan1'}`}></i>\n                        <div className='item' onClick={this.handleSeeClick.bind(this)}>{see && '战略伙伴优惠价'}</div>\n                        {/* 成交价 */}\n                        <div className='item' style={{alignItems: 'flex-start'}}>{see && <PriceLabel price={cost} />}</div>\n                    </>\n                }\n                <WhiteSpace size='lg'></WhiteSpace>\n                <WingBlank>\n                    <Button type='primary' onClick={e => onClose(e)}>重新询价</Button>\n                </WingBlank>\n            </div>\n        )\n    }\n}\n\nfunction PriceLabel(props: any) {\n    return (\n        <span className='price-label'><span className='price'>{props.price}</span>元/月</span>\n    )\n}","import React from 'react'\nimport { List, Modal, Radio } from \"antd-mobile\";\nimport './ModalPicker.less'\n\nexport default function ModalPicker(props) {\n    const { title, visible, onClose, dataSource, value, onOk } = props\n    const onItemClick = data => {\n        onOk(data)\n        onClose()\n    }\n    return <Modal\n        visible={visible}\n        title={title}\n        transparent\n        onClose={onClose}>\n        <List style={{ maxHeight: '300px' }}>\n            {dataSource.map(i => (\n                <Radio key={i.label} checked={value === i.value} onChange={() => onItemClick(i)} className='modal-picker-item-radio'>\n                    <span style={{ color: '#666' }}>{i.label}</span>\n                </Radio>\n            ))}\n        </List>\n    </Modal>\n}","import React from 'react'\nimport './main.less'\nimport { List, InputItem, Picker, Button, WingBlank, WhiteSpace, Toast, Modal, ActivityIndicator } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport { httpPost, httpGet } from '../util/http';\nimport { calcPrice, isNumber } from '../util/util';\nimport Result from './result';\nimport User from '../util/user';\nimport ModalPicker from '../components/ModalPicker/ModalPicker';\n\nconst CodeInterval = 60;\nconst datas = require('../assets/datas.json')\n\nclass Main extends React.Component {\n    state = {\n        loading: false,\n        codeDisabled: false,\n        codeBtnText: '获取验证码',\n        hasSendMsg: false,\n        priecs: {},\n        showResult: false,\n        isSaler: false, // 是否是营销人员\n        validPhone: false, // 是否验证手机号\n        categoryVisible: false, // 品类弹出框\n        cityVisible: false, // 城市弹出框\n    }\n    componentDidMount() {\n        this.setState({\n            loading: true\n        })\n        User.login().then(async res => {\n            this.setState({\n                loading: false,\n                validPhone: res.auth_mobile === 0,\n                isSaler: res.type === 'sale'\n            })\n        }, err => {\n            Toast.fail(err)\n            this.setState({\n                loading: false\n            })\n        })\n        // httpGet('/userinfo').then(res => {\n        //     this.setState({\n        //         loading: false,\n        //         validPhone: true,\n        //         isSaler: res.type === 'sale'\n        //     })\n        // })\n    }\n    typeData = datas.type.map(each => { return { label: each.label, value: each } })\n    cityData = datas.city.map(each => { return { label: each.label, value: each } })\n    submit() {\n        this.props.form.validateFields().then(values => {\n            values.mouth_sales_volume = values.mouth_sales_volume * 10000\n            // console.log('form valid success', JSON.stringify(values))\n            const priecs = calcPrice(values.area, values.year_limit, values.mouth_sales_volume, values.category[0].value, values.city[0].value)\n            this.setState({ priecs })\n            values.min_reserve_price = priecs.floor\n            values.reserve_price = priecs.cost\n            values.offer_price = priecs.offer\n            values.city = values.city[0].label\n            values.category = values.category[0].label\n            let formData = new FormData()\n            Object.keys(values).map(key => {\n                formData.append(key, values[key])\n            })\n            this.setState({ loading: true })\n            httpPost('/offer', formData).then(res => {\n                this.setState({ loading: false })\n                this.showResult()\n            }, err => {\n                this.setState({ loading: false })\n                console.log(err)\n                Toast.fail(err)\n            })\n        }, ({ errors }) => {\n            // console.log('errs', errors)\n            for (let field in errors) {\n                Toast.fail(this.props.form.getFieldError(field)[0], 1, null, false)\n                break\n            }\n        })\n    }\n    getCode() {\n        if (this.state.codeDisabled) {\n            return false;\n        }\n\n        const mobile = this.props.form.getFieldValue('mobile')\n        if (!mobile) {\n            Toast.fail('请输入手机号', 2, null, false)\n            return\n        }\n\n        this.setState({\n            codeDisabled: true\n        })\n\n        httpGet('/smscode', { mobile: mobile }).then(() => {\n            this.setState({\n                hasSendMsg: true,\n            })\n\n            let restTime = CodeInterval\n\n            let codeSendInterval = setInterval(() => {\n                if (restTime === 0) {\n                    this.setState({\n                        codeBtnText: '重发验证',\n                        codeDisabled: false\n                    })\n                    clearInterval(codeSendInterval);\n                    return;\n                }\n                this.setState({\n                    codeBtnText: `${restTime}秒后重新获取`,\n                })\n                restTime--;\n            }, 1000);\n            Toast.success('验证码已发送', 1)\n        }, error => {\n            console.log(error)\n            Modal.alert('', error)\n            this.setState({\n                codeDisabled: false\n            })\n        });\n    }\n    showResult() {\n        this.setState({ showResult: true })\n    }\n    closeResult() {\n        this.setState({ showResult: false })\n    }\n    // 字符串转合法数字\n    numberNormalize(val) {\n        const num = Number(val)\n        if (val === '' || !isNumber(num)) {\n            return val\n        }\n        return num\n    }\n    render() {\n        const { getFieldProps, getFieldValue, setFieldsValue } = this.props.form;\n        const { showResult, priecs, isSaler, validPhone, loading, categoryVisible, cityVisible } = this.state\n        return (\n            <form className='mainPage' aria-hidden={cityVisible || categoryVisible}>\n                <List renderHeader={() => '店铺信息'}>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入面积\"\n                        {...getFieldProps('area', {\n                            validateTrigger: 'onBlur',\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                type: 'number',\n                                min: 50,\n                                max: 3500,\n                                message: '面积为50到3500之间的整数'\n                            }],\n                        })}\n                        extra='平方米'\n                    >面积</InputItem>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入年限\"\n                        {...getFieldProps('year_limit', {\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                message: '请填写年限'\n                            }],\n                        })}\n                        extra='年'\n                    >年限</InputItem>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入月销售额\"\n                        {...getFieldProps('mouth_sales_volume', {\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                message: '请填写月销售额'\n                            }],\n                        })}\n                        extra='万元'\n                    >月销售额</InputItem>\n                    <Picker\n                        {...getFieldProps('category', {\n                            rules: [{\n                                required: true,\n                                message: '请选择品类'\n                            }],\n                        })}\n                        data={this.typeData}\n                        cols={1}\n                        title=\"选择品类\"\n                        extra=\"请选择\"\n                        disabled={true}\n                    >\n                        <List.Item arrow=\"horizontal\" onClick={() => { this.setState({ categoryVisible: true }) }}>选择品类</List.Item>\n                    </Picker>\n                    <Picker\n                        {...getFieldProps('city', {\n                            rules: [{\n                                required: true,\n                                message: '请选择城市'\n                            }],\n                        })}\n                        data={this.cityData}\n                        cols={1}\n                        title=\"选择城市\"\n                        extra=\"请选择\"\n                        disabled={true}\n                    >\n                        <List.Item arrow=\"horizontal\" onClick={() => this.setState({ cityVisible: true })}>所在城市</List.Item>\n                    </Picker>\n                </List>\n                {validPhone &&\n                    <List renderHeader={() => '用户信息'}>\n                        <InputItem\n                            maxLength={4}\n                            editable={true}\n                            placeholder=\"请输入联系人\"\n                            {...getFieldProps('name', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写联系人'\n                                }],\n                            })}\n                        >联系人</InputItem>\n                        <InputItem\n                            type='number'\n                            maxLength={11}\n                            editable={true}\n                            placeholder=\"请输入手机号\"\n                            {...getFieldProps('mobile', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写手机号'\n                                }],\n                            })}\n                        >手机号</InputItem>\n                        <InputItem\n                            type='number'\n                            editable={true}\n                            placeholder=\"请输入验证码\"\n                            {...getFieldProps('code', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写验证码'\n                                }],\n                            })}\n                            extra={\n                                <span className={`btn_code ${this.state.codeDisabled && 'disabled'}`} onClick={this.getCode.bind(this)}>{this.state.codeBtnText}</span>\n                            }\n                        >验证码</InputItem>\n                    </List>\n                }\n                <WhiteSpace size='xl'></WhiteSpace>\n                <WingBlank>\n                    <Button type='primary' onClick={this.submit.bind(this)}>查询</Button>\n                </WingBlank>\n                {showResult && <Result {...priecs} isSaler={isSaler} onClose={this.closeResult.bind(this)}></Result>}\n                <ActivityIndicator\n                    toast\n                    text=\"正在加载...\"\n                    animating={loading}\n                />\n                <ModalPicker\n                    title='点击选择品类'\n                    visible={categoryVisible}\n                    onClose={() => { this.setState({ categoryVisible: false }) }}\n                    dataSource={this.typeData}\n                    value={getFieldValue('category') && getFieldValue('category')[0]}\n                    onOk={data => {\n                        setFieldsValue({ category: [data.value] })\n                    }}\n                />\n                <ModalPicker\n                    title='点击选择城市'\n                    visible={cityVisible}\n                    onClose={() => { this.setState({ cityVisible: false }) }}\n                    dataSource={this.cityData}\n                    value={getFieldValue('city') && getFieldValue('city')[0]}\n                    onOk={data => {\n                        setFieldsValue({ city: [data.value] })\n                    }}\n                />\n            </form>\n        )\n    }\n}\nexport default createForm()(Main)","import { createHashHistory } from 'history'\n\nexport default createHashHistory()","import React from 'react'\nimport './main.less'\nimport { List, Picker, Button, WingBlank, WhiteSpace, Toast, ActivityIndicator } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport { httpPost, httpGet } from '../../util/http';\nimport { isNumber } from '../../util/util';\nimport History from '../../util/history'\n\nclass PartsMain extends React.Component {\n    state = {\n        loading: false,\n        citys: [],\n        devices: [],\n        parts: [],\n        standards: []\n    }\n    componentDidMount() {\n        this.fetchCityData()\n    }\n    fetchCityData = () => {\n        httpGet('/parts/query/cities.json').then(res => {\n            this.setState({\n                citys: this.array2pickerData(res)\n            })\n        })\n    }\n    fetchDevicesData = (city) => {\n        httpGet('/parts/query/devices.json', { city: city }).then(res => {\n            this.setState({\n                devices: this.array2pickerData(res)\n            })\n        })\n    }\n    fetchPartsData = (device) => {\n        httpGet('/parts/query/parts.json', { city: this.props.form.getFieldValue('city'), device: device }).then(res => {\n            this.setState({\n                parts: this.array2pickerData(res)\n            })\n        })\n    }\n    fetchStandardsData = (part) => {\n        httpGet('/parts/query/standards.json', { city: this.props.form.getFieldValue('city'), device: this.props.form.getFieldValue('device'), part: part }).then(res => {\n            this.setState({\n                standards: this.array2pickerData(res)\n            })\n        })\n    }\n    array2pickerData(ary) {\n        return ary.map(each => {\n            return {\n                value: each,\n                label: each\n            }\n        })\n    }\n    handleCityChange = data => {\n        this.fetchDevicesData(data)\n    }\n    handledeviceChange = data => {\n        this.fetchPartsData(data)\n    }\n    handlePartsChange = data => {\n        this.fetchStandardsData(data)\n    }\n    submit() {\n        this.props.form.validateFields().then(values => {\n            console.log('form valid success', JSON.stringify(values))\n            // let formData = new FormData()\n            // Object.keys(values).map(key => {\n            //     formData.append(key, values[key])\n            // })\n            // this.setState({ loading: true })\n            // httpPost('/parts/query.json', formData).then(() => {\n                // this.setState({ loading: false })\n                History.push({\n                    pathname: '/parts/result',\n                    state: values\n                })\n            // }, err => {\n            //     this.setState({ loading: false })\n            //     console.log(err)\n            //     Toast.fail(err)\n            // })\n        }, ({ errors }) => {\n            for (let field in errors) {\n                Toast.fail(this.props.form.getFieldError(field)[0], 1, null, false)\n                break\n            }\n        })\n    }\n    // 字符串转合法数字\n    numberNormalize(val) {\n        const num = Number(val)\n        if (val === '' || !isNumber(num)) {\n            return val\n        }\n        return num\n    }\n    render() {\n        const { getFieldProps } = this.props.form;\n        const { loading, citys, devices, parts, standards } = this.state\n        return (\n            <form className='mainPage'>\n                <List renderHeader={() => '配件查询'}>\n                    <Picker\n                        {...getFieldProps('city', {\n                            onChange: this.handleCityChange,\n                            rules: [{\n                                required: true,\n                                message: '请选择城市'\n                            }],\n                        })}\n                        data={citys}\n                        cols={1}\n                        title=\"选择城市\"\n                        extra=\"请选择\"\n                    >\n                        <List.Item arrow=\"horizontal\">城市</List.Item>\n                    </Picker>\n                    <Picker\n                        {...getFieldProps('device', {\n                            onChange: this.handledeviceChange,\n                            rules: [{\n                                required: true,\n                                message: '请选择设备'\n                            }],\n                        })}\n                        data={devices}\n                        cols={1}\n                        title=\"选择设备\"\n                        extra=\"请选择\"\n                    >\n                        <List.Item arrow=\"horizontal\">设备名称</List.Item>\n                    </Picker>\n                    <Picker\n                        {...getFieldProps('part', {\n                            onChange: this.handlePartsChange,\n                            rules: [{\n                                required: true,\n                                message: '请选择配件'\n                            }],\n                        })}\n                        data={parts}\n                        cols={1}\n                        title=\"选择配件\"\n                        extra=\"请选择\"\n                    >\n                        <List.Item arrow=\"horizontal\">配件名称</List.Item>\n                    </Picker>\n                    <Picker\n                        {...getFieldProps('standard', {\n                            initialValue: ''\n                        })}\n                        data={standards}\n                        cols={1}\n                        title=\"选择规格\"\n                        extra=\"请选择\"\n                    >\n                        <List.Item arrow=\"horizontal\">规格</List.Item>\n                    </Picker>\n                </List>\n                <WhiteSpace size='xl'></WhiteSpace>\n                <WingBlank>\n                    <Button type='primary' onClick={this.submit.bind(this)}>立即查询</Button>\n                </WingBlank>\n                <ActivityIndicator\n                    toast\n                    text=\"正在加载...\"\n                    animating={loading}\n                />\n            </form>\n        )\n    }\n}\nexport default createForm()(PartsMain)","import React from 'react'\nimport './result.less'\nimport { Button, Modal, Toast, List, Flex, InputItem, TextareaItem } from 'antd-mobile'\nimport History from '../../util/history'\nimport { httpPost } from '../../util/http'\nimport { Brief } from 'antd-mobile/lib/list/ListItem'\nimport { createForm } from 'rc-form';\n\nexport default createForm()(class PartsResult extends React.Component {\n  state = {\n    result: History.location.state,\n    list: [],\n    modalVisiable: false,\n    id: null,\n    activeItemKey: null\n  }\n  componentDidMount() {\n    const result = this.state.result\n    if (!result) {\n      this.requery()\n      return\n    }\n\n    let formData = new FormData()\n    Object.keys(result).map(key => {\n      formData.append(key, result[key])\n    })\n    this.setState({ loading: true })\n    httpPost('/parts/query.json', formData).then(res => {\n      this.setState({ loading: false, list: res })\n    }, err => {\n      this.setState({ loading: false })\n      console.log(err)\n      Toast.fail(err)\n    })\n  }\n  requery() {\n    History.push('/parts')\n  }\n  yiyi = id => {\n    if (id === this.state.activeItemKey) {\n      this.setState({\n        activeItemKey: null\n      })\n    } else {\n      this.setState({\n        activeItemKey: id\n      })\n    }\n  }\n  yiyiModal = (data) => {\n    this.setState({\n      modalVisiable: true,\n      id: data.id,\n      activeItemKey: null\n    })\n  }\n  submit = () => {\n    this.props.form.validateFields().then(values => {\n      let formData = new FormData()\n      formData.append('partId', this.state.id)\n      formData.append('comment', values.comment)\n      formData.append('contact', values.contact)\n      httpPost('/parts/objection/add.json', formData).then(() => {\n        this.closeModal()\n        Toast.success('提交成功')\n      }, err => {\n        console.log(err)\n        Toast.fail(err)\n      })\n    }, ({ errors }) => {\n      for (let field in errors) {\n        Toast.fail(this.props.form.getFieldError(field)[0], 1, null, false)\n        break\n      }\n    })\n  }\n  closeModal = () => {\n    this.setState({\n      modalVisiable: false\n    }, () => {\n      this.props.form.resetFields()\n    })\n  }\n  render() {\n    const { result, list, modalVisiable, activeItemKey } = this.state\n    const { form: { getFieldProps } } = this.props\n    if (!result) return null\n    return (\n      <div className='parts-result'>\n        <List>\n          <List.Item>\n            <span>查询结果</span>\n            <Brief>\n              <Flex>\n                <Flex.Item className='result-title'>\n                  <div>{result.city} &gt; {result.device} &gt; {result.part}{result.standard && <span> &gt; {result.standard}</span>}</div>\n                </Flex.Item>\n                <Button type='primary' size='small' onClick={this.requery}>重新询价</Button>\n              </Flex>\n            </Brief>\n          </List.Item>\n        </List>\n        <List renderHeader={<ResultListHeader />}>\n          {list.map(each => {\n            return <div className={`swipe-wrap ${activeItemKey === each.id ? 'active' : ''}`}>\n              <List.Item className='swipe-cover' key={each.id} onClick={() => this.yiyi(each.id)} extra={<ResultListRight data={each} />}>\n                {each.device_name}-{each.part_name}{each.standard && <span>-{each.standard}</span>}\n              </List.Item>\n              <div className='swipe-content' onClick={() => this.yiyiModal(each)}><div>异议</div></div>\n            </div>\n          })}\n        </List>\n        <Modal\n          transparent\n          title='提出异议'\n          visible={modalVisiable}\n          footer={[{ text: '取消', onPress: this.closeModal },\n          { text: '确认', onPress: this.submit }]}\n        >\n          <List className='modal-list'>\n            <TextareaItem\n              autoHeight\n              placeholder='您对价格的意见'\n              {...getFieldProps('comment', {\n                rules: [{\n                  required: true,\n                  message: '请填写意见'\n                }],\n              })}></TextareaItem>\n            <TextareaItem\n              autoHeight\n              placeholder='留下您的联系方式，电话+姓名'\n              {...getFieldProps('contact', {\n                rules: [{\n                  required: true,\n                  message: '请填写联系方式'\n                }],\n              })}></TextareaItem>\n          </List>\n\n        </Modal>\n      </div>\n    )\n  }\n})\n\nfunction ResultListHeader() {\n  return <Flex>\n    <Flex.Item style={{ flex: 1 }}>名称</Flex.Item>\n    <Flex.Item style={{ textAlign: 'right' }}>价格区间 <div style={{ display: 'inline-block', width: '50px' }}>单位</div></Flex.Item>\n  </Flex>\n}\n\nfunction ResultListRight(props) {\n  return <div style={{ textAlign: 'right' }}>{props.data.price}<div style={{ display: 'inline-block', width: '35px' }}>{props.data.unit}</div></div>\n}","import React from 'react';\nimport Main from './pages/main'\nimport PartsMain from './pages/parts/main'\nimport PartsResult from './pages/parts/result'\nimport { Route, Router, Switch } from 'react-router-dom'\nimport History from './util/history'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={History}>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/parts\" component={PartsMain} />\n          <Route exact path=\"/parts/result\" component={PartsResult} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}