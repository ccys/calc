{"version":3,"sources":["util/user.js","util/http.js","util/util.tsx","pages/result.tsx","pages/main.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["User","openid","getOpenid","this","login","getUserInfo","code","getQueryVariable","local","window","location","href","redirect_uri","encodeURIComponent","httpGet","Promise","resolve","reject","a","res","variable","vars","search","substring","split","i","length","pair","url","params","addCommonParam","handleResponse","fetch","param","encode","paramAry","push","join","urlEncode","mode","fetchPromise","then","json","Response","data","msg","append","Result","state","see","clickCounter","timer","props","isSaler","alert","floor","setTimeout","clearTimeout","setState","cost","offer","onClose","className","onClick","handleIconClick","bind","PriceLabel","price","handleSeeClick","style","alignItems","size","type","e","React","Component","datas","require","Main","loading","codeDisabled","codeBtnText","hasSendMsg","priecs","showResult","validPhone","typeData","map","each","label","value","cityData","city","auth_mobile","err","fail","form","validateFields","values","area","year","sales","typeC","cityC","basePrice","floorPrice","costPrice","offerPrice","costC","offerC","toFixed","calcPrice","year_limit","mouth_sales_volume","category","min_reserve_price","reserve_price","offer_price","formData","FormData","Object","keys","key","method","body","httpPost","console","log","errors","field","getFieldError","mobile","getFieldValue","restTime","codeSendInterval","setInterval","clearInterval","success","error","val","obj","num","Number","isNaN","getFieldProps","renderHeader","editable","placeholder","validateTrigger","normalize","numberNormalize","rules","required","min","max","message","extra","cols","title","Item","arrow","maxLength","getCode","submit","closeResult","toast","text","animating","createForm","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.31a44366.chunk.js","sourcesContent":["import { httpGet } from \"./http\"\n\nconst User = {\n    openid: '',\n    getOpenid() {\n        // if (process.env.NODE_ENV === 'development') {\n        //     return 'oPKdSwC58K57Mskin6hDQUJdSLqs'\n        // }\n        // return localStorage.getItem('openid')\n        return this.openid\n    },\n    async login() { // 静默授权\n        if (!!this.getOpenid()) {\n            return this.getUserInfo(this.getOpenid())\n        }\n        const code = this.getQueryVariable('code') // 截取路径中的code，如果没有就去微信授权，如果已经获取到了就直接传code给后台获取openId\n        const local = window.location.href\n        if (!!!code) {\n            const appId = 'wx364a8470a58b03ed'\n            const redirect_uri = encodeURIComponent(local)\n            window.location.href = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appId}&redirect_uri=${redirect_uri}&response_type=code&scope=snsapi_base&state=#wechat_redirect`\n        } else {\n            try {\n                const { openid } = await httpGet('/getopenid', { code: code })\n                this.openid = openid\n                return this.getUserInfo(openid)\n            } catch (error) {\n                window.location = '/'\n            }\n        }\n    },\n    async getUserInfo(openid) { // 通过code获取 openId等用户信息\n        return new Promise(async (resolve, reject) => {\n            try {\n                const res = await httpGet('/userinfo', { openid: openid })\n                return resolve(res)\n            }\n            catch (error) {\n                return reject(error)\n            }\n        })\n    },\n    // 获取当前url参数\n    getQueryVariable(variable) {\n        var query = window.location.search.substring(1);\n        var vars = query.split(\"&\");\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split(\"=\");\n            if (pair[0] === variable) { return pair[1]; }\n        }\n        return (false);\n    }\n}\nexport default User","import { urlEncode } from \"./util\"\nimport User from \"./user\"\n\n// const BASE_URL = 'https://www.fastmock.site/mock/0834d4826d5be6de92173193ca42e1b9'\n// let BASE_URL = 'http://zwb-baojia.zhaodaka.vip/api/wechat'\nlet BASE_URL = '/api/webchat'\n// if (process.env.NODE_ENV === 'development') {\n//     BASE_URL = '/api/webchat'\n// }\n\nexport function httpGet(url, params) {\n    params = addCommonParam(params)\n    return handleResponse(fetch(BASE_URL + url + '?' + urlEncode(params), {\n        mode: 'cors',\n    }))\n}\nexport function httpPost(url, formData) {\n    formData = addCommonParam(formData)\n    return handleResponse(fetch(BASE_URL + url, {\n        method: 'POST',\n        mode: 'cors',\n        body: formData\n    }))\n}\nfunction handleResponse(fetchPromise) {\n    return new Promise((resolve, reject) => {\n        fetchPromise.then(res => res.json()).then(Response => {\n            if (Response.code === 200) {\n                return resolve(Response.data)\n            } else {\n                return reject(Response.msg)\n            }\n        })\n    })\n}\n\nfunction addCommonParam(params) {\n    const openid = User.getOpenid()\n    if (!!openid) {\n        if (params.append) {\n            params.append('openid', openid)\n        } else {\n            params.openid = openid\n        }\n    }\n    return params\n}","/**\n * 计算低价、成本、报价\n * \n * @param area 面积\n * @param year 年限\n * @param sales 月销售额\n * @param typeC 品类系数\n * @param cityC 城市系数\n */\nexport function calcPrice(area: number, year: number, sales: number, typeC: number, cityC: number) {\n    let basePrice = 0 // 标准报价\n    let floorPrice = 0 // 成交底价==成交底价（标准报价）*品类系数*城市系数\n    let costPrice = 0 // 成交价=成交底价*成交价系数\n    let offerPrice = 0 // 报价=成交价*报价系数\n    let costC = 1 // 成交价系数\n    let offerC = 1 // 报价系数\n\n    if (area < 50) {\n        return false\n    }\n    if (area < 100) {\n        basePrice = (area / 60 * 200 + 150) * (year / 3 * 0.15 + 0.85) * (sales / area / 1700 * 0.1 + 0.9)\n        costC = 1.18\n        offerC = 1.25\n    } else if (area < 200) {\n        basePrice = (area / 170 * 300 + 300) * (year / 3 * 0.15 + 0.85) * (sales / area / 1400 * 0.1 + 0.9)\n        costC = 1.15\n        offerC = 1.2\n    } else if (area < 400) {\n        basePrice = (area / 290 * 450 + 350) * (year / 3 * 0.15 + 0.85) * (sales / area / 1300 * 0.1 + 0.9)\n        costC = 1.15\n        offerC = 1.2\n    } else if (area < 800) {\n        basePrice = (area / 550 * 800 + 350) * (year / 3 * 0.15 + 0.85) * (sales / area / 1100 * 0.1 + 0.9)\n        costC = 1.12\n        offerC = 1.15\n    } else if (area < 1400) {\n        basePrice = (area / 1100 * 1300 + 500) * (year / 3 * 0.15 + 0.85) * (sales / area / 1000 * 0.1 + 0.9)\n        costC = 1.1\n        offerC = 1.12\n    } else if (area < 2300) {\n        basePrice = (area / 1800 * 1500 + 1000) * (year / 3 * 0.15 + 0.85) * (sales / area / 900 * 0.1 + 0.9)\n        costC = 1.1\n        offerC = 1.12\n    } else if (area <= 3500) {\n        basePrice = (area / 2800 * 2300 + 1300) * (year / 4 * 0.15 + 0.85) * (sales / area / 900 * 0.1 + 0.9)\n        costC = 1.1\n        offerC = 1.12\n    }\n    if (area >= 400 && cityC === 1.1) {\n        cityC = 1.05\n    }\n    if (area >= 400 && cityC === 1.35) {\n        cityC = 1.3\n    }\n    floorPrice = basePrice * typeC * cityC\n    costPrice = floorPrice * costC\n    offerPrice = costPrice * offerC\n    // console.log(area, year, sales, typeC, cityC)\n    // console.log('calc result: ', basePrice, floorPrice, costPrice, offerPrice)\n    return {\n        floor: floorPrice.toFixed(0),\n        cost: costPrice.toFixed(0),\n        offer: offerPrice.toFixed(0)\n    }\n}\n\n/** \n * param 将要转为URL参数字符串的对象 \n * encode true/false 是否进行URL编码,默认为true \n *  \n * return URL参数字符串 \n */\nexport function urlEncode(param: any, encode = true) {\n    if (param == null) return '';\n    const paramAry = [];\n    for (const i in param) {\n        paramAry.push(i + '=' + (encode ? encodeURIComponent(param[i]) : param[i]))\n    }\n    return paramAry.join('&');\n}\n\nexport function isNumber(obj: any) {\n    return typeof obj === 'number' && !isNaN(obj)\n}\n","import React from 'react'\nimport './result.less'\nimport { Button, WingBlank, Modal, WhiteSpace } from 'antd-mobile'\ntype PageProps = {\n    floor: number,\n    cost: number,\n    offer: number,\n    onClose: Function,\n    isSaler: Boolean\n}\nexport default class Result extends React.Component<PageProps, {}> {\n    state = {\n        see: false\n    }\n    clickCounter = 0\n    timer: any\n    handleIconClick() {\n        if (!this.props.isSaler) return\n\n        this.clickCounter++\n        if (this.clickCounter >= 3) {\n            Modal.alert('成交底价', this.props.floor + '元/月')\n            return\n        }\n        this.timer = setTimeout(() => {\n            clearTimeout(this.timer)\n            this.clickCounter = 0\n        }, 500)\n    }\n    handleSeeClick() {\n        this.setState({ see: !this.state.see })\n    }\n    render() {\n        const { cost, offer, onClose, isSaler } = this.props\n        const { see } = this.state\n        return (\n            <div className='resultPage'>\n                <div className='result iconfont icon-dui' onClick={this.handleIconClick.bind(this)}></div>\n                <div className='item'>您好，根据您的经营情况，报价如下</div>\n                {/* 报价 */}\n                <div className='item'><PriceLabel price={offer} /></div>\n                {isSaler &&\n                    <>\n                        <i className={`see iconfont ${see ? 'icon-ziyuan' : 'icon-ziyuan1'}`}></i>\n                        <div className='item' onClick={this.handleSeeClick.bind(this)}>{see && '战略伙伴优惠价'}</div>\n                        {/* 成交价 */}\n                        <div className='item' style={{alignItems: 'flex-start'}}>{see && <PriceLabel price={cost} />}</div>\n                    </>\n                }\n                <WhiteSpace size='lg'></WhiteSpace>\n                <WingBlank>\n                    <Button type='primary' onClick={e => onClose(e)}>重新询价</Button>\n                </WingBlank>\n            </div>\n        )\n    }\n}\n\nfunction PriceLabel(props: any) {\n    return (\n        <span className='price-label'><span className='price'>{props.price}</span>元/月</span>\n    )\n}","import React from 'react'\nimport './main.less'\nimport { List, InputItem, Picker, Button, WingBlank, WhiteSpace, Toast, Modal, ActivityIndicator } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport { httpPost, httpGet } from '../util/http';\nimport { calcPrice, isNumber } from '../util/util';\nimport Result from './result';\nimport User from '../util/user';\n\nconst CodeInterval = 60;\nconst datas = require('../assets/datas.json')\n\nclass Main extends React.Component {\n    state = {\n        loading: false,\n        codeDisabled: false,\n        codeBtnText: '获取验证码',\n        hasSendMsg: false,\n        priecs: {},\n        showResult: false,\n        isSaler: false, // 是否是营销人员\n        validPhone: false // 是否验证手机号\n    }\n    componentDidMount() {\n        this.setState({\n            loading: true\n        })\n        User.login().then(async res => {\n            this.setState({\n                loading: false,\n                validPhone: res.auth_mobile === 0,\n                isSaler: res.type === 'sale'\n            })\n        }, err => {\n            Toast.fail(err)\n            this.setState({\n                loading: false\n            })\n        })\n        // httpGet('/userinfo').then(res => {\n        //     this.setState({\n        //         loading: false,\n        //         validPhone: true,\n        //         isSaler: res.type === 'sale'\n        //     })\n        // })\n    }\n    typeData = datas.type.map(each => { return { label: each.label, value: each } })\n    cityData = datas.city.map(each => { return { label: each.label, value: each } })\n    submit() {\n        this.props.form.validateFields().then(values => {\n            // console.log('form valid success', JSON.stringify(values))\n            const priecs = calcPrice(values.area, values.year_limit, values.mouth_sales_volume, values.category[0].value, values.city[0].value)\n            this.setState({ priecs })\n            values.min_reserve_price = priecs.floor\n            values.reserve_price = priecs.cost\n            values.offer_price = priecs.offer\n            values.city = values.city[0].label\n            values.category = values.category[0].label\n            let formData = new FormData()\n            Object.keys(values).map(key => {\n                formData.append(key, values[key])\n            })\n            this.setState({ loading: true })\n            httpPost('/offer', formData).then(res => {\n                this.setState({ loading: false })\n                this.showResult()\n            }, err => {\n                this.setState({ loading: false })\n                console.log(err)\n                Toast.fail(err)\n            })\n        }, ({ errors }) => {\n            // console.log('errs', errors)\n            for (let field in errors) {\n                Toast.fail(this.props.form.getFieldError(field)[0], 1, null, false)\n                break\n            }\n        })\n    }\n    getCode() {\n        if (this.state.codeDisabled) {\n            return false;\n        }\n\n        const mobile = this.props.form.getFieldValue('mobile')\n        if (!mobile) {\n            Toast.fail('请输入手机号', 2, null, false)\n            return\n        }\n\n        this.setState({\n            codeDisabled: true\n        })\n\n        httpGet('/smscode', { mobile: mobile }).then(() => {\n            this.setState({\n                hasSendMsg: true,\n            })\n\n            let restTime = CodeInterval\n\n            let codeSendInterval = setInterval(() => {\n                if (restTime === 0) {\n                    this.setState({\n                        codeBtnText: '重发验证',\n                        codeDisabled: false\n                    })\n                    clearInterval(codeSendInterval);\n                    return;\n                }\n                this.setState({\n                    codeBtnText: `${restTime}秒后重新获取`,\n                })\n                restTime--;\n            }, 1000);\n            Toast.success('验证码已发送', 1)\n        }, error => {\n            console.log(error)\n            Modal.alert('', error)\n            this.setState({\n                codeDisabled: false\n            })\n        });\n    }\n    showResult() {\n        this.setState({ showResult: true })\n    }\n    closeResult() {\n        this.setState({ showResult: false })\n    }\n    // 字符串转合法数字\n    numberNormalize(val) {\n        const num = Number(val)\n        if (val === '' || !isNumber(num)) {\n            return val\n        }\n        return num\n    }\n    render() {\n        const { getFieldProps } = this.props.form;\n        const { showResult, priecs, isSaler, validPhone, loading } = this.state\n        return (\n            <form className='mainPage'>\n                <List renderHeader={() => '店铺信息'}>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入面积\"\n                        {...getFieldProps('area', {\n                            validateTrigger: 'onBlur',\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                type: 'number',\n                                min: 50,\n                                max: 3500,\n                                message: '面积为50到3500之间的整数'\n                            }],\n                        })}\n                        extra='平方米'\n                    >面积</InputItem>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入年限\"\n                        {...getFieldProps('year_limit', {\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                message: '请填写年限'\n                            }],\n                        })}\n                        extra='年'\n                    >年限</InputItem>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入月销售额\"\n                        {...getFieldProps('mouth_sales_volume', {\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                message: '请填写月销售额'\n                            }],\n                        })}\n                        extra='元'\n                    >月销售额</InputItem>\n                    <Picker\n                        {...getFieldProps('category', {\n                            rules: [{\n                                required: true,\n                                message: '请选择品类'\n                            }],\n                        })}\n                        data={this.typeData}\n                        cols={1}\n                        title=\"选择品类\"\n                        extra=\"请选择\"\n                    >\n                        <List.Item arrow=\"horizontal\">选择品类</List.Item>\n                    </Picker>\n                    <Picker\n                        {...getFieldProps('city', {\n                            rules: [{\n                                required: true,\n                                message: '请选择城市'\n                            }],\n                        })}\n                        data={this.cityData}\n                        cols={1}\n                        title=\"选择城市\"\n                        extra=\"请选择\"\n                    >\n                        <List.Item arrow=\"horizontal\">所在城市</List.Item>\n                    </Picker>\n                </List>\n                {validPhone &&\n                    <List renderHeader={() => '用户信息'}>\n                        <InputItem\n                            maxLength={4}\n                            editable={true}\n                            placeholder=\"请输入联系人\"\n                            {...getFieldProps('name', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写联系人'\n                                }],\n                            })}\n                        >联系人</InputItem>\n                        <InputItem\n                            type='number'\n                            maxLength={11}\n                            editable={true}\n                            placeholder=\"请输入手机号\"\n                            {...getFieldProps('mobile', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写手机号'\n                                }],\n                            })}\n                        >手机号</InputItem>\n                        <InputItem\n                            type='number'\n                            editable={true}\n                            placeholder=\"请输入验证码\"\n                            {...getFieldProps('code', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写验证码'\n                                }],\n                            })}\n                            extra={\n                                <span className={`btn_code ${this.state.codeDisabled && 'disabled'}`} onClick={this.getCode.bind(this)}>{this.state.codeBtnText}</span>\n                            }\n                        >验证码</InputItem>\n                    </List>\n                }\n                <WhiteSpace size='xl'></WhiteSpace>\n                <WingBlank>\n                    <Button type='primary' onClick={this.submit.bind(this)}>查询</Button>\n                </WingBlank>\n                {showResult && <Result {...priecs} isSaler={isSaler} onClose={this.closeResult.bind(this)}></Result>}\n                <ActivityIndicator\n                    toast\n                    text=\"正在加载...\"\n                    animating={loading}\n                />\n            </form>\n        )\n    }\n}\nexport default createForm()(Main)","import React from 'react';\nimport Main from './pages/main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}