{"version":3,"sources":["util/http.js","util/util.tsx","pages/result.tsx","util/user.js","pages/main.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["httpGet","url","params","addCommonParam","fetch","param","encode","paramAry","i","push","encodeURIComponent","join","urlEncode","mode","then","res","json","openid","localStorage","getItem","append","Result","state","see","clickCounter","timer","this","props","isSaler","alert","floor","setTimeout","clearTimeout","setState","cost","offer","onClose","className","onClick","handleIconClick","bind","PriceLabel","price","handleSeeClick","size","type","e","React","Component","User","login","code","getQueryVariable","local","window","location","href","getUserInfo","redirect_uri","data","setItem","console","log","variable","vars","search","substring","split","length","pair","datas","require","Main","loading","codeDisabled","codeBtnText","hasSendMsg","priecs","showResult","validPhone","typeData","map","each","label","value","cityData","city","a","auth_mobile","form","validateFields","values","JSON","stringify","formData","area","year","sales","typeC","cityC","basePrice","floorPrice","costPrice","offerPrice","costC","offerC","toFixed","calcPrice","year_limit","mouth_sales_volume","category","min_reserve_price","reserve_price","method","body","err","errors","field","fail","getFieldError","mobile","getFieldValue","restTime","codeSendInterval","setInterval","clearInterval","success","error","val","obj","num","Number","isNaN","getFieldProps","renderHeader","editable","placeholder","validateTrigger","normalize","numberNormalize","rules","required","min","max","message","extra","cols","title","Item","arrow","maxLength","getCode","submit","closeResult","toast","text","animating","createForm","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b10c1edc.chunk.js","sourcesContent":["import { urlEncode } from \"./util\"\n\n// const BASE_URL = 'https://www.fastmock.site/mock/0834d4826d5be6de92173193ca42e1b9'\n// let BASE_URL = 'http://zwb-baojia.zhaodaka.vip/api/wechat'\nlet BASE_URL = '/api/webchat'\n// if (process.env.NODE_ENV === 'development') {\n//     BASE_URL = '/api/webchat'\n// }\n\nexport function httpGet(url, params) {\n    params = addCommonParam(params)\n    return fetch(BASE_URL + url + '?' + urlEncode(params), {\n        mode: 'cors',\n    }).then(res => res.json())\n}\nexport function httpPost(url, formData) {\n    formData = addCommonParam(formData)\n    return fetch(BASE_URL + url, {\n        method: 'POST',\n        mode: 'cors',\n        body: formData\n    }).then(res => res.json())\n}\n\nfunction addCommonParam(params) {\n    const openid = localStorage.getItem('openid')\n    if (!!openid) {\n        if (params.append) {\n            params.append('openid', openid)\n        } else {\n            params.openid = openid\n        }\n    }\n    return params\n}","/**\n * 计算低价、成本、报价\n * \n * @param area 面积\n * @param year 年限\n * @param sales 月销售额\n * @param typeC 品类系数\n * @param cityC 城市系数\n */\nexport function calcPrice(area: number, year: number, sales: number, typeC: number, cityC: number) {\n    let basePrice = 0 // 标准报价\n    let floorPrice = 0 // 成交底价==成交底价（标准报价）*品类系数*城市系数\n    let costPrice = 0 // 成交价=成交底价*成交价系数\n    let offerPrice = 0 // 报价=成交价*报价系数\n    let costC = 1 // 成交价系数\n    let offerC = 1 // 报价系数\n    if (area < 50) {\n        return false\n    }\n    if (area < 100) {\n        basePrice = (area / 50 * 200 + 100) * (year / 3 * 0.15 + 0.85) * (sales / area / 1500 * 0.1 + 0.9)\n        costC = 1.18\n        offerC = 1.25\n    }\n    if (area < 200) {\n        basePrice = (area / 150 * 300 + 270) * (year / 3 * 0.15 + 0.85) * (sales / area / 1300 * 0.15 + 0.85)\n        costC = 1.15\n        offerC = 1.2\n    }\n    if (area < 400) {\n        basePrice = (area / 300 * 530 + 280) * (year / 3 * 0.15 + 0.85) * (sales / area / 1200 * 0.15 + 0.85)\n        costC = 1.15\n        offerC = 1.2\n    }\n    if (area < 800) {\n        basePrice = (area / 600 * 900 + 350) * (year / 3 * 0.15 + 0.85) * (sales / area / 1000 * 0.05 + 0.95)\n        costC = 1.15\n        offerC = 1.2\n    }\n    if (area < 1400) {\n        basePrice = (area / 1100 * 1400 + 500) * (year / 3 * 0.15 + 0.85) * (sales / area / 900 * 0.15 + 0.85)\n        costC = 1.12\n        offerC = 1.2\n    }\n    if (area < 2300) {\n        basePrice = (area / 1900 * 2200 + 600) * (year / 3 * 0.15 + 0.85) * (sales / area / 700 * 0.15 + 0.85)\n        costC = 1.12\n        offerC = 1.2\n    }\n    if (area <= 3500) {\n        basePrice = (area / 2800 * 3000 + 800) * (year / 4 * 0.15 + 0.85) * (sales / area / 700 * 0.15 + 0.85)\n        costC = 1.12\n        offerC = 1.2\n    }\n    floorPrice = basePrice * typeC * cityC\n    costPrice = floorPrice * costC\n    offerPrice = costPrice * offerC\n    // console.log('calc result: ', basePrice, floorPrice, costPrice, offerPrice)\n    return {\n        floor: floorPrice.toFixed(0),\n        cost: costPrice.toFixed(0),\n        offer: offerPrice.toFixed(0)\n    }\n}\n\n/** \n * param 将要转为URL参数字符串的对象 \n * encode true/false 是否进行URL编码,默认为true \n *  \n * return URL参数字符串 \n */\nexport function urlEncode(param: any, encode = true) {\n    if (param == null) return '';\n    const paramAry = [];\n    for (const i in param) {\n        paramAry.push(i + '=' + (encode ? encodeURIComponent(param[i]) : param[i]))\n    }\n    return paramAry.join('&');\n}\n\nexport function isNumber(obj: any) {\n    return typeof obj === 'number' && !isNaN(obj)\n}\n","import React from 'react'\nimport './result.less'\nimport { Button, WingBlank, Modal, WhiteSpace } from 'antd-mobile'\ntype PageProps = {\n    floor: number,\n    cost: number,\n    offer: number,\n    onClose: Function,\n    isSaler: Boolean\n}\nexport default class Result extends React.Component<PageProps, {}> {\n    state = {\n        see: false\n    }\n    clickCounter = 0\n    timer: any\n    handleIconClick() {\n        if (!this.props.isSaler) return\n\n        this.clickCounter++\n        if (this.clickCounter >= 3) {\n            Modal.alert('成交底价', this.props.floor + '元/月')\n            return\n        }\n        this.timer = setTimeout(() => {\n            clearTimeout(this.timer)\n            this.clickCounter = 0\n        }, 500)\n    }\n    handleSeeClick() {\n        this.setState({ see: !this.state.see })\n    }\n    render() {\n        const { cost, offer, onClose, isSaler } = this.props\n        const { see } = this.state\n        return (\n            <div className='resultPage'>\n                <div className='result iconfont icon-dui' onClick={this.handleIconClick.bind(this)}></div>\n                <div className='item'>您好，根据您的经营情况，报价如下</div>\n                {/* 报价 */}\n                <div className='item'><PriceLabel price={offer} /></div>\n                {isSaler &&\n                    <>\n                        <div className='item' onClick={this.handleSeeClick.bind(this)}>战略客户优惠价<i className={`see iconfont ${see ? 'icon-ziyuan' : 'icon-ziyuan1'}`}></i></div>\n                        {/* 成交价 */}\n                        <div className='item'>{see && <PriceLabel price={cost} />}</div>\n                    </>\n                }\n                <WhiteSpace size='lg'></WhiteSpace>\n                <WingBlank>\n                    <Button type='primary' onClick={e => onClose(e)}>重新询价</Button>\n                </WingBlank>\n            </div>\n        )\n    }\n}\n\nfunction PriceLabel(props: any) {\n    return (\n        <span className='price-label'><span className='price'>{props.price}</span>元/月</span>\n    )\n}","import { httpGet } from \"./http\"\n\nconst User = {\n    login() { // 静默授权\n        const code = this.getQueryVariable('code') // 截取路径中的code，如果没有就去微信授权，如果已经获取到了就直接传code给后台获取openId\n        const local = window.location.href\n        if (!!!code) {\n            const appId = 'wx364a8470a58b03ed'\n            const redirect_uri = encodeURIComponent(local)\n            window.location.href = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appId}&redirect_uri=${redirect_uri}&response_type=code&scope=snsapi_base&state=#wechat_redirect`\n        } else {\n            return this.getUserInfo(code) //把code传给后台获取用户信息\n        }\n    },\n    async getUserInfo(code) { // 通过code获取 openId等用户信息\n        try {\n            const { data: { openid } } = await httpGet('/getopenid', { code: code })\n            localStorage.setItem('openid', openid)\n            const { data: res } = await httpGet('/userinfo', { openid: openid })\n            return res\n        }\n        catch (error) {\n            console.log(error)\n        }\n    },\n    // 获取当前url参数\n    getQueryVariable(variable) {\n        var query = window.location.search.substring(1);\n        var vars = query.split(\"&\");\n        for (var i = 0; i < vars.length; i++) {\n            var pair = vars[i].split(\"=\");\n            if (pair[0] === variable) { return pair[1]; }\n        }\n        return (false);\n    }\n}\nexport default User","import React from 'react'\nimport './main.less'\nimport { List, InputItem, Picker, Button, WingBlank, WhiteSpace, Toast, Modal, ActivityIndicator } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport { httpPost, httpGet } from '../util/http';\nimport { calcPrice, isNumber } from '../util/util';\nimport Result from './result';\nimport User from '../util/user';\n\nconst CodeInterval = 60;\nconst datas = require('../assets/datas.json')\n\nclass Main extends React.Component {\n    state = {\n        loading: true,\n        codeDisabled: false,\n        codeBtnText: '获取验证码',\n        hasSendMsg: false,\n        priecs: {},\n        showResult: false,\n        isSaler: false, // 是否是营销人员\n        validPhone: false // 是否验证手机号\n    }\n    componentDidMount() {\n        User.login().then(async res => {\n            this.setState({\n                loading: false,\n                validPhone: res.auth_mobile === 0,\n                isSaler: res.type === 'sale'\n            })\n        })\n        // httpGet('/userinfo').then(res => {\n        //     this.setState({\n        //         loading: false,\n        //         validPhone: true,\n        //         isSaler: res.type === 'sale'\n        //     })\n        // })\n    }\n    typeData = datas.type.map(each => { return { label: each.label, value: each } })\n    cityData = datas.city.map(each => { return { label: each.label, value: each } })\n    submit() {\n        this.props.form.validateFields().then(values => {\n            console.log('form valid success', JSON.stringify(values))\n            const priecs = calcPrice(values.area, values.year_limit, values.mouth_sales_volume, values.category[0].value, values.city[0].value)\n            this.setState({ priecs })\n            values.min_reserve_price = priecs.floor\n            values.reserve_price = priecs.offer\n            values.city = values.city[0].label\n            values.category = values.category[0].label\n            httpPost('/offer', values).then(res => {\n                this.showResult()\n            }, err => {\n                console.log(err)\n            })\n        }, ({ errors }) => {\n            // console.log('errs', errors)\n            for (let field in errors) {\n                Toast.fail(this.props.form.getFieldError(field)[0], 1, null, false)\n                break\n            }\n        })\n    }\n    getCode() {\n        if (this.state.codeDisabled) {\n            return false;\n        }\n\n        const mobile = this.props.form.getFieldValue('mobile')\n        if (!mobile) {\n            Toast.fail('请输入手机号', 2, null, false)\n            return\n        }\n\n        this.setState({\n            codeDisabled: true\n        })\n\n        httpGet('/smscode', { mobile: mobile }).then(() => {\n            this.setState({\n                hasSendMsg: true,\n            })\n\n            let restTime = CodeInterval\n\n            let codeSendInterval = setInterval(() => {\n                if (restTime === 0) {\n                    this.setState({\n                        codeBtnText: '重发验证',\n                        codeDisabled: false\n                    })\n                    clearInterval(codeSendInterval);\n                    return;\n                }\n                this.setState({\n                    codeBtnText: `${restTime}秒后重新获取`,\n                })\n                restTime--;\n            }, 1000);\n            Toast.success('验证码已发送', 1)\n        }, error => {\n            console.log(error)\n            Modal.alert('', error.error)\n            this.setState({\n                codeDisabled: false\n            })\n        });\n    }\n    showResult() {\n        this.setState({ showResult: true })\n    }\n    closeResult() {\n        this.setState({ showResult: false })\n    }\n    // 字符串转合法数字\n    numberNormalize(val) {\n        const num = Number(val)\n        if (val === '' || !isNumber(num)) {\n            return val\n        }\n        return num\n    }\n    render() {\n        const { getFieldProps } = this.props.form;\n        const { showResult, priecs, isSaler, validPhone, loading } = this.state\n        return (\n            <form className='mainPage'>\n                <List renderHeader={() => '店铺信息'}>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入面积\"\n                        {...getFieldProps('area', {\n                            validateTrigger: 'onBlur',\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                type: 'number',\n                                min: 50,\n                                max: 3500,\n                                message: '面积为50到3500之间的整数'\n                            }],\n                        })}\n                        extra='平方米'\n                    >面积</InputItem>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入年限\"\n                        {...getFieldProps('year_limit', {\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                message: '请填写年限'\n                            }],\n                        })}\n                        extra='年'\n                    >年限</InputItem>\n                    <InputItem\n                        type='number'\n                        editable={true}\n                        placeholder=\"请输入月销售额\"\n                        {...getFieldProps('mouth_sales_volume', {\n                            normalize: e => this.numberNormalize(e),\n                            rules: [{\n                                required: true,\n                                message: '请填写月销售额'\n                            }],\n                        })}\n                        extra='万'\n                    >月销售额</InputItem>\n                    <Picker\n                        {...getFieldProps('category', {\n                            rules: [{\n                                required: true,\n                                message: '请选择品类'\n                            }],\n                        })}\n                        data={this.typeData}\n                        cols={1}\n                        title=\"选择品类\"\n                        extra=\"请选择\"\n                    >\n                        <List.Item arrow=\"horizontal\">选择品类</List.Item>\n                    </Picker>\n                    <Picker\n                        {...getFieldProps('city', {\n                            rules: [{\n                                required: true,\n                                message: '请选择城市'\n                            }],\n                        })}\n                        data={this.cityData}\n                        cols={1}\n                        title=\"选择城市\"\n                        extra=\"请选择\"\n                    >\n                        <List.Item arrow=\"horizontal\">所在城市</List.Item>\n                    </Picker>\n                </List>\n                {validPhone &&\n                    <List renderHeader={() => '用户信息'}>\n                        <InputItem\n                            maxLength={4}\n                            editable={true}\n                            placeholder=\"请输入联系人\"\n                            {...getFieldProps('name', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写联系人'\n                                }],\n                            })}\n                        >联系人</InputItem>\n                        <InputItem\n                            type='number'\n                            maxLength={11}\n                            editable={true}\n                            placeholder=\"请输入手机号\"\n                            {...getFieldProps('mobile', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写手机号'\n                                }],\n                            })}\n                        >手机号</InputItem>\n                        <InputItem\n                            type='number'\n                            editable={true}\n                            placeholder=\"请输入验证码\"\n                            {...getFieldProps('code', {\n                                rules: [{\n                                    required: true,\n                                    message: '请填写验证码'\n                                }],\n                            })}\n                            extra={\n                                <span className={`btn_code ${this.state.codeDisabled && 'disabled'}`} onClick={this.getCode.bind(this)}>{this.state.codeBtnText}</span>\n                            }\n                        >验证码</InputItem>\n                    </List>\n                }\n                <WhiteSpace size='xl'></WhiteSpace>\n                <WingBlank>\n                    <Button type='primary' onClick={this.submit.bind(this)}>查询</Button>\n                </WingBlank>\n                {showResult && <Result {...priecs} isSaler={isSaler} onClose={this.closeResult.bind(this)}></Result>}\n                <ActivityIndicator\n                    toast\n                    text=\"正在加载...\"\n                    animating={loading}\n                />\n            </form>\n        )\n    }\n}\nexport default createForm()(Main)","import React from 'react';\nimport Main from './pages/main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}